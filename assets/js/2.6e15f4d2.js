(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{178:function(t,s,e){t.exports=e.p+"assets/img/1.48012ae3.png"},179:function(t,s,e){t.exports=e.p+"assets/img/2.f6783150.png"},180:function(t,s,e){t.exports=e.p+"assets/img/3.7cac6e03.png"},181:function(t,s,e){t.exports=e.p+"assets/img/4.793cd6ee.png"},182:function(t,s,e){t.exports=e.p+"assets/img/5.a6d97d7f.png"},183:function(t,s,e){t.exports=e.p+"assets/img/6.c9ae9f74.png"},184:function(t,s,e){t.exports=e.p+"assets/img/7.e3de225d.png"},185:function(t,s,e){t.exports=e.p+"assets/img/8.246bf81f.png"},186:function(t,s,e){t.exports=e.p+"assets/img/9.40a45b84.png"},187:function(t,s,e){t.exports=e.p+"assets/img/10.0aa0429d.png"},188:function(t,s,e){t.exports=e.p+"assets/img/11.04e8e13a.png"},189:function(t,s,e){t.exports=e.p+"assets/img/12.2fe13e92.png"},190:function(t,s,e){t.exports=e.p+"assets/img/13.a2cbff03.png"},191:function(t,s,e){t.exports=e.p+"assets/img/14.7d6642e0.png"},192:function(t,s,e){t.exports=e.p+"assets/img/15.e50d23a8.png"},193:function(t,s,e){t.exports=e.p+"assets/img/16.ba9667b2.png"},222:function(t,s,e){"use strict";e.r(s);var a=[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("p",[t._v("本节探讨一下docker 的多个容器是怎么通信的\n首先准备环境")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ docker pull busybox\n$ sudo yum install -y bridge-utils\n")])])]),a("p",[a("img",{attrs:{src:e(178),alt:""}})]),t._v(" "),a("p",[a("img",{attrs:{src:e(179),alt:""}})]),t._v(" "),a("p",[t._v("启动一个容器")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ docker run -itd --name test1 busybox\n")])])]),a("p",[a("img",{attrs:{src:e(180),alt:""}}),t._v("\n再启动一个容器添加一个link")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ docker run -itd --name test2 --link=test1 busybox\n")])])]),a("p",[a("img",{attrs:{src:e(181),alt:""}}),t._v("\ntest2可以和test1进行通信说明是可达的\n反之看一下test1 能否和test2通信\n"),a("img",{attrs:{src:e(182),alt:""}}),t._v("\n经过测试test1和test2是不可达的")]),t._v(" "),a("p",[t._v("再看一下test1和test2连接的网桥\n"),a("img",{attrs:{src:e(183),alt:""}}),t._v("\n继续往下找")]),t._v(" "),a("p",[a("img",{attrs:{src:e(184),alt:""}})]),t._v(" "),a("p",[t._v("test1的ip:\n"),a("img",{attrs:{src:e(185),alt:""}})]),t._v(" "),a("p",[t._v("test2的ip:")]),t._v(" "),a("p",[a("img",{attrs:{src:e(186),alt:""}})]),t._v(" "),a("p",[a("img",{attrs:{src:e(187),alt:""}}),t._v("\n可以进入test1和test2的容器内部查看ip和这里的一样,可以证明容器自动连接在docker0这个网卡上,默认是无法彼此间通信,需要用--link去指定")]),t._v(" "),a("blockquote",[a("p",[t._v("如果容器启动的很多,--link的方法很不方便,下面换一种方法,创建一个网桥,所有的容器连接在新建的网桥上")])]),t._v(" "),a("p",[t._v("先把容器全部删掉")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ docker rm -f test1 test2\n")])])]),a("p",[t._v("先看一下docker network 有哪些命令")]),t._v(" "),a("p",[a("img",{attrs:{src:e(188),alt:""}})]),t._v(" "),a("p",[t._v("下面先创建一个bridge\n再启动2个容器并连接到新建的bridge上")]),t._v(" "),a("p",[a("img",{attrs:{src:e(189),alt:""}})]),t._v(" "),a("p",[t._v("再来看一下bridge 和new-bridge")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ docker network inspect bridge\n")])])]),a("p",[a("img",{attrs:{src:e(190),alt:""}}),t._v("\n没有任何一个容器连接在bridge上")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ docker network inspect new-bridge\n")])])]),a("p",[a("img",{attrs:{src:e(191),alt:""}})]),t._v(" "),a("p",[t._v("可以看到test1和test2确实连接在新建的  new-bridge上")]),t._v(" "),a("p",[t._v("再一次进入test1 和test2容器内去ping 对方\n"),a("img",{attrs:{src:e(192),alt:""}})]),t._v(" "),a("p",[a("img",{attrs:{src:e(193),alt:""}}),t._v("\n可以看到没有任何的容器连接在docker0上")]),t._v(" "),a("p",[t._v("总结: 容器内之间进行通信的方式有2种")]),t._v(" "),a("ol",[a("li",[t._v("启动的时候用--link 指定 container。")]),t._v(" "),a("li",[t._v("新建一个网桥,把所有的容器连接在新建的网桥上。")])])])}],n=e(0),r=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},a,!1,null,null,null);s.default=r.exports}}]);